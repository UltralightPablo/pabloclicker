do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (v17==4) then function v24()local v38=0 + 0;local v39;local v40;while true do if (v38==(896 -(832 + 64))) then v39=v23();v40=v23();v38=2 -1;end if (v38==(1990 -(799 + 1190))) then return (( -(2 + 0) * v20(v40,32)) + 1 + 0) * ((1951 -(587 + 1362))^(v20(v40,4 + 16 + 1,624 -(49 + 544)) -1023)) * ((((v20(v40,1640 -(229 + 1410),64 -44) * ((714 -(673 + 39))^(54 -(12 + 10)))) + v39)/(((133 + 5) -(13 + 72 + 51))^(94 -42))) + 1);end end end v25=nil;function v25(v30)local v41;if  not v30 then local v65=0 -0;while true do if (v65==0) then v30=v23();if (v30==((1171 -(532 + 639)) + 0)) then return "";end break;end end end v41=v3(v15,v18,(v18 + v30) -(1 + 0));v18=v18 + v30;local v42={};for v63=(1013 -(998 + 12)) -(1 + 1), #v41 do v42[v63]=v2(v1(v3(v41,v63,v63)));end return v6(v42);end v17=5;end if (2==v17) then function v21()local v43=v1(v15,v18,v18);v18=v18 + 1;return v43;end v22=nil;function v22()local v44,v45=v1(v15,v18,v18 + (18 -(15 + 1)));v18=v18 + 2;return (v45 * (604 -348)) + v44;end v17=3;end if (v17==0) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v31)if (v1(v31,2)==79) then v19=v0(v3(v31,1,1));return "";else local v66=v2(v0(v31,16));if v19 then local v74=v5(v66,v19);v19=nil;return v74;else return v66;end end end);v17=1;end if (v17==6) then v28=nil;function v28()local v46=0 -0;local v47;local v48;local v49;local v50;local v51;local v52;local v53;local v54;local v55;while true do if (v46~=(11 -7)) then else v55=nil;while true do if (v47~=(1924 -(1676 + 246))) then else local v90=0 -0;while true do if (v90==0) then v52=nil;v53=nil;v90=3 -2;end if ((1 + 0)~=v90) then else v47=1175 -(1162 + 10);break;end end end if (v47~=(0 -0)) then else v48=1019 -(775 + 244);v49=nil;v47=1 + 0;end if (v47==(9 -5)) then while true do if ((0 + 0)==v48) then local v95=0 -0;while true do if (v95==(1 -0)) then v48=1 + 0;break;end if (v95==(127 -(119 + 8))) then v49=0;v50=nil;v95=1;end end end if (v48~=3) then else v55=nil;while true do local v97=0 + 0;while true do if (v97==(0 -0)) then if (v49==(1 + 1)) then local v100=0;local v101;while true do if (v100~=0) then else v101=0 -0;while true do if (v101~=(1573 -(1294 + 278))) then else for v151=3 -2,v23() do local v152=363 -(132 + 231);local v153;local v154;while true do if (0==v152) then v153=0 -0;v154=nil;v152=1 -0;end if (v152~=(703 -(399 + 303))) then else while true do if (v153~=0) then else v154=v21();if (v20(v154,1659 -(1131 + 527),1419 -(1164 + 254))~=(0 -0)) then else local v254=0;local v255;local v256;local v257;local v258;local v259;while true do if (v254~=(2 -1)) then else v257=nil;v258=nil;v254=2 + 0;end if (v254~=(1063 -(484 + 579))) then else v255=0 -0;v256=nil;v254=1681 -(1222 + 458);end if (v254==2) then v259=nil;while true do if (v255~=(0 -0)) then else v256=0 + 0;v257=nil;v255=1090 -(1077 + 12);end if (v255~=(1 + 1)) then else while true do if (v256==(2 + 1)) then if (v20(v258,3,1 + 2)~=1) then else v259[1 + 3]=v55[v259[4]];end v50[v151]=v259;break;end if (v256~=(1 + 0)) then else local v325=0;local v326;local v327;while true do if ((0 -0)==v325) then v326=0 -0;v327=nil;v325=106 -(62 + 43);end if (1==v325) then while true do if (v326==(215 -(168 + 47))) then v327=0;while true do if (v327~=0) then else local v344=0 + 0;while true do if (v344~=1) then else v327=1 + 0;break;end if ((0 -0)~=v344) then else v259={v22(),v22(),nil,nil};if (v257==0) then local v347=0;while true do if (v347~=(0 -0)) then else v259[1 + 2]=v22();v259[5 -1]=v22();break;end end elseif (v257==1) then v259[6 -3]=v23();elseif (v257==2) then v259[2 + 1]=v23() -((2 + 0)^(10 + 6));elseif (v257~=3) then else local v352=0 -0;local v353;local v354;while true do if (v352==(0 + 0)) then local v355=0 -0;while true do if (v355==(1 + 0)) then v352=2 -1;break;end if (v355~=0) then else v353=131 -(96 + 35);v354=nil;v355=1794 -(1469 + 324);end end end if (v352~=(168 -(110 + 57))) then else while true do if ((0 -0)~=v353) then else v354=0 -0;while true do if (v354==(954 -(63 + 891))) then v259[1 + 2]=v23() -(2^(1492 -(152 + 1324)));v259[610 -(197 + 409)]=v22();break;end end break;end end break;end end end v344=2 -1;end end end if (v327~=(1 -0)) then else v256=1 + 1;break;end end break;end end break;end end end if (0==v256) then local v328=42 -(17 + 25);while true do if (v328~=(0 -0)) then else local v337=0 -0;while true do if (v337~=(0 -0)) then else v257=v20(v154,1 + 1,1 + 2);v258=v20(v154,552 -(168 + 380),10 -4);v337=1;end if (v337~=1) then else v328=1 + 0;break;end end end if (v328==(1 -0)) then v256=2 -1;break;end end end if (v256~=(4 -2)) then else local v329=0 + 0;local v330;while true do if (v329~=0) then else v330=880 -(738 + 142);while true do if (v330~=(1935 -(1140 + 794))) then else v256=3 -0;break;end if (v330==(284 -(206 + 78))) then local v341=947 -(850 + 97);while true do if (v341~=0) then else if (v20(v258,1 + 0,3 -2)~=(2 -1)) then else v259[934 -(362 + 570)]=v55[v259[2]];end if (v20(v258,2 + 0,5 -3)~=1) then else v259[1171 -(1122 + 46)]=v55[v259[1430 -(999 + 428)]];end v341=3 -2;end if (v341~=(3 -2)) then else v330=1 + 0;break;end end end end break;end end end end break;end if (v255==(1 -0)) then v258=nil;v259=nil;v255=2 + 0;end end break;end end end break;end end break;end end end v49=3 + 0;break;end if (v101==0) then local v108=1223 -(454 + 769);while true do if (v108~=(1 -0)) then else v101=1 + 0;break;end if (v108~=(0 + 0)) then else local v219=0;while true do if (v219~=(2 -1)) then else v108=3 -2;break;end if (v219~=(0 + 0)) then else for v240=1641 -(1504 + 136),v54 do local v241=1282 -(549 + 733);local v242;local v243;local v244;local v245;while true do if (v241==(5 -3)) then while true do if (v242==(1725 -(749 + 976))) then v243=690 -(421 + 269);v244=nil;v242=1;end if (v242==(1 + 0)) then v245=nil;while true do if (v243==1) then if (v244==(4 -3)) then v245=v21()~=(0 -0);elseif (v244==(1164 -(754 + 408))) then v245=v24();elseif (v244~=(1 + 2)) then else v245=v25();end v55[v240]=v245;break;end if (v243~=(838 -(217 + 621))) then else local v312=40 -(7 + 33);while true do if (v312==1) then v243=1 + 0;break;end if (v312==0) then local v331=0;while true do if (v331==(1127 -(941 + 185))) then v312=1 + 0;break;end if (v331~=(0 -0)) then else v244=v21();v245=nil;v331=2 -1;end end end end end end break;end end break;end if (v241==(0 -0)) then v242=37 -(19 + 18);v243=nil;v241=1 -0;end if (v241~=(1264 -(1070 + 193))) then else v244=nil;v245=nil;v241=1586 -(1203 + 381);end end end v53[9 -6]=v21();v219=1144 -(874 + 269);end end end end end end break;end end end if (v49~=0) then else local v102=0;local v103;while true do if (v102==(198 -(102 + 96))) then v103=0 + 0;while true do if ((0 + 0)==v103) then local v109=0 + 0;while true do if (v109~=(0 -0)) then else v50={};v51={};v109=1 -0;end if (1==v109) then v103=3 -2;break;end end end if (v103==1) then v52={};v49=2 -1;break;end end break;end end end v97=1470 -(740 + 729);end if (1~=v97) then else if (v49==(1912 -(139 + 1770))) then local v104=0;while true do local v106=0;local v107;while true do if (v106~=(0 -0)) then else v107=0 + 0;while true do if (v107~=0) then else if (v104==(0 + 0)) then local v220=0 -0;local v221;while true do if (v220==(1532 -(725 + 807))) then v221=0 -0;while true do if (v221==(0 + 0)) then for v277=1 + 0,v23() do v51[v277-1]=v28();end for v279=1,v23() do v52[v279]=v23();end v221=4 -3;end if (v221==(975 -(248 + 726))) then v104=1 + 0;break;end end break;end end end if (v104~=(404 -(177 + 226))) then else return v53;end break;end end break;end end end end if (v49==(1 + 0)) then local v105=0;while true do if (v105~=(1 -0)) then else v55={};v49=1716 -(1452 + 262);break;end if (v105~=(0 + 0)) then else v53={v50,v51,nil,v52};v54=v23();v105=4 -3;end end end break;end end end break;end if (v48==(4 -3)) then v51=nil;v52=nil;v48=1 + 1;end if (v48==(1958 -(1083 + 873))) then local v96=290 -(156 + 134);while true do if (v96~=(1586 -(312 + 1273))) then else v48=2 + 1;break;end if (v96~=(963 -(636 + 327))) then else v53=nil;v54=nil;v96=1 + 0;end end end end break;end if (v47~=(7 -4)) then else local v91=851 -(779 + 72);while true do if (v91~=(735 -(424 + 310))) then else v47=4;break;end if (v91==(0 -0)) then v54=nil;v55=nil;v91=1 + 0;end end end if (v47~=(2 -1)) then else local v92=0;while true do if (v92==(0 + 0)) then v50=nil;v51=nil;v92=1;end if ((1 + 0)~=v92) then else v47=2 + 0;break;end end end end break;end if (v46~=(0 + 0)) then else v47=0 + 0;v48=nil;v46=1720 -(603 + 1116);end if (v46==(1392 -(410 + 981))) then v49=nil;v50=nil;v46=1 + 1;end if (v46~=(2 + 0)) then else v51=nil;v52=nil;v46=2 + 1;end if ((3 + 0)==v46) then v53=nil;v54=nil;v46=4;end end end v29=nil;v17=7;end if (v17==1) then v20=nil;function v20(v32,v33,v34)if v34 then local v67=(v32/((1761 -(837 + 922))^(v33-(368 -(236 + 131)))))%((4 -2)^(((v34-((1 + 0) -0)) -(v33-(1429 -(155 + 1273)))) + (2 -1)));return v67-(v67%(1 + 0));else local v68=(4 -2)^(v33-(1233 -(813 + 419)));return (((v32%(v68 + v68))>=v68) and 1) or 0;end end v21=nil;v17=2;end if (v17==5) then v26=v23;v27=nil;function v27(...)return {...},v11("#",...);end v17=6;end if (v17==7) then function v29(v35,v36,v37)local v56=v35[1];local v57=v35[2];local v58=v35[3];return function(...)local v69=1;local v70= -1;local v71={...};local v72=v11("#",...) -1;local function v73()local v75=v56;local v76=Const;local v77=v57;local v78=v58;local v79=v27;local v80={};local v81={};local v82={};for v87=(0 -0) + (0 -0),v72 do if ((v87>=v78) or (((600 + 3271) -(124 + 909))>=(9976 -6391))) then v80[v87-v78]=v71[v87 + (366 -(34 + 331))];else v82[v87]=v71[v87 + 1];end end local v83=(v72-v78) + 1 + 0;local v84;local v85;while true do local v88=0 -(0 -0);local v89;while true do if (((3954 + 486)>=(3033 -(998 + 395))) and (v88==(0 -0))) then v89=0 + 0 + 0;while true do if ((v89==1) or (((366 -238) -(155 -72))>=(1753 -(289 + 175)))) then if (((2902 -(1404 + 253))<2618) and (v85<=(4 + (30 -12)))) then if ((v85<=(31 -21)) or ((13925 -10147)<=(4772 -2649))) then if ((((10419 -5654) -(945 + 592))>(1965 + 908)) and (v85<=(815 -(558 + 253)))) then if (((2310 -(906 + 55 + 86))>(165 + 509)) and (v85<=(407 -(342 + 64)))) then if ((v85>(191 -(86 + 105))) or ((5058 -(444 + (38 -(33 + 4))))<(4498 -(31 + 268)))) then v82[v84[8 -6]]=v82[v84[3 -0]];else v82[v84[936 -(344 + 590)]]();end elseif ((v85<=2) or ((2209 + 1429)<2944)) then v37[v84[6 -3]]=v82[v84[2 + 0]];elseif (((5088 -((620 -(122 + 272)) + 1446))==((12467 -9304) + 253)) and (v85>(3 -0))) then if (((4841 -2636)<(91 + 3456)) and (v82[v84[4 -2]]==v84[1295 -(1263 + 28)])) then v69=v69 + (1 -0);else v69=v84[114 -(44 + 67)];end else local v155=0 -0;local v156;local v157;local v158;while true do if ((v155==(683 -(483 + 200))) or ((14052 -10475)<(4861 -(401 + 14 + 914)))) then v156=0 -0;v157=nil;v155=1;end if (((1055 + 2236)>=(80 + 1438)) and (v155==(3 -2))) then v158=nil;while true do if ((v156==((0 + 0) -0)) or ((1449 -461)==(3483 -(682 + 59 + 25)))) then local v249=0;while true do if (((2951 -(436 + 1397))<=(1929 -562)) and (v249==0)) then v157=0 + 0;v158=nil;v249=1 + 0;end if ((v249==(1084 -(821 + 262))) or ((4446 -(130 + 60))<=(5255 -2879))) then v156=1;break;end end end if (((140 + 189)<(2105 -(486 + 444))) and (v156==(1433 -(992 + 440)))) then while true do if ((v157==0) or (3324>(9236 -5871))) then v158=v84[2];do return v82[v158](v12(v82,v158 + 1,v84[14 -11]));end break;end end break;end end break;end end end elseif (((12656 -(3267 + 5405))>=3778) and (v85<=(1957 -(1443 + 507)))) then if (((6609 -4954)>((2141 -(297 + 172)) -342)) and (v85<=(2 + 3))) then v82[v84[4 -2]]=v36[v84[882 -(700 + 179)]];elseif ((((31062 -17779) -10354)>101) and (v85>(179 -(130 + 43)))) then local v159=0 -0;local v160;local v161;local v162;local v163;while true do if ((v159==(1357 -(1038 + 319))) or (4447<=(6239 -2476))) then v160=1633 -(224 + 1409);v161=nil;v159=1;end if (((1917 + 573 + 184)==2674) and (v159==(1 -0))) then v162=nil;v163=nil;v159=5 -3;end if ((v159==((594 -(27 + 565)) + 0)) or ((5188 -(263 + 940))<=(1331 + 497))) then while true do if ((0==v160) or (((14551 -8240) -4394)>(8748 -5013))) then local v250=0;while true do if ((v250==(116 -(24 + 92))) or ((16208 -11364)<((523 + 6770) -4053))) then v161=0;v162=nil;v250=1;end if (((6411 -1978)>=3050) and (v250==((2514 -1924) -(509 + 80)))) then v160=(240 -(213 + 25)) -1;break;end end end if (((8844 -5111)>=1869) and (v160==(1 + 0))) then v163=nil;while true do if (((917 -474)<=(9973 -5783)) and (v161==(738 -((833 -(678 + 53)) + 635)))) then v82[v162 + 1]=v163;v82[v162]=v163[v84[4 + 0]];break;end if ((((2617 -(538 + 656)) -(113 + 122))==1188) and (v161==(0 + 0))) then local v292=0 + 0;while true do if (((361 -185)==(1933 -(1025 + 732))) and (v292==0)) then local v308=0;while true do if ((((8882 -5784) -1240)<(4744 -(29 + 522))) and (v308==(0 + 0))) then v162=v84[(3503 -(1535 + 407)) -(757 + 802)];v163=v82[v84[3]];v308=156 -(74 + 81);end if (((2581 + 1174)<=4654) and (v308==(1962 -(1595 + 366)))) then v292=1;break;end end end if (((3090 -(1701 + 232))>333) and (v292==(1 + 0))) then v161=222 -(30 + 191);break;end end end end break;end end break;end end else v82[v84[2]]=v82[v84[3]] -v84[919 -(239 + 676)];end elseif ((v85<=(7 + 1)) or ((8277 -(7796 -3834))<=(5283 -(641 + 995)))) then v82[v84[9 -(4 + 3)]]=v82[v84[3]][v82[v84[4 + 0]]];elseif ((((1370 + 1059) -(679 + 834))<=(1169 + (898 -(301 + 218)))) and (v85==(26 -17))) then v82[v84[2]]= #v82[v84[6 -3]];else v82[v84[4 -2]]={};end elseif (((2703 -(2000 -1003))<(7964 -4598)) and (v85<=(848 -(446 + 386)))) then if ((v85<=(6 + 7)) or ((2218 -(652 + 62))==4479)) then if ((v85<=11) or ((3111 -(1160 + 2))==2034)) then v82[v84[2 + 0]][v84[1980 -(716 + 1261)]]=v84[4];elseif ((v85==(56 -(32 + 12))) or ((9233 -5101)<3171)) then if ((v84[4 -2]==v82[v84[1628 -(121 + 1503)]]) or (1572>3264)) then v69=v69 + 1 + 0;else v69=v84[1 + 2];end else v82[v84[(661 -(360 + 299)) -0]][v84[2 + 1]]=v82[v84[1 + 3]];end elseif ((v85<=(11 + 3)) or (((576 -382) + 167 + 218)<(2202 -1632))) then v36[v84[3 + 0]]=v82[v84[1 + 1]];elseif ((4755>(2616 -850)) and (v85>(908 -(456 + (1633 -1196))))) then for v222=v84[314 -(113 + 199)],v84[1 + 2] do v82[v222]=nil;end else local v168=570 -(144 + 426);local v169;local v170;local v171;local v172;local v173;while true do if ((v168==(1 -0)) or (87>(1236 + 823))) then v171=nil;v172=nil;v168=2 + 0;end if (((1534 -783)>=(16 -6)) and (v168==(0 -0))) then v169=(773 -(454 + 319)) + 0;v170=nil;v168=1;end if ((v168==(5 -(2 + 1))) or ((3230 -(2439 -(551 + 759)))>(15419 -(27992 -16459)))) then v173=nil;while true do if ((v169==0) or (4429<=(930 + 3055))) then local v251=(185 -143) -(38 + 4);while true do if ((v251==(2 -(1 + 0))) or ((2698 -(275 + 1 + 107))==(3518 -(23 + 278)))) then v169=1444 -(1234 + 209);break;end if ((0==v251) or ((10247 -6091)<3665)) then v170=v84[3 -1];v171,v172=v79(v82[v170](v12(v82,v170 + 1,v70)));v251=1 + 0;end end end if (((5438 -(1359 + 2337))<(3962 -(917 + 938))) and (v169==(3 -2))) then v70=(v172 + v170) -(869 -(243 + 625));v173=0;v169=(2185 -1212) -(52 + 919);end if ((v169==(3 -1)) or ((7192 -3449)<=(5639 -(302 + 1596 + 29)))) then for v260=v170,v70 do local v261=0 + 0;local v262;while true do if ((v261==(432 -(207 + 225))) or ((5408 -(71 + 691))<(1335 + 2380))) then v262=1750 -(982 + 768);while true do if ((v262==0) or ((3389 -(719 + 856))<=(2162 -(895 + 427)))) then v173=v173 + (1195 -(450 + 744));v82[v260]=v171[v173];break;end end break;end end end break;end end break;end end end elseif ((v85<=(9 + 10)) or (4594<4415)) then if ((2946<=((10609 -6459) -(135 + 1030))) and (v85<=(957 -(571 + 369)))) then v82[v84[1 + 1]]=v82[v84[1 + 2]] + v84[4];elseif ((v85==18) or ((240 + 679)>(3157 -(18 + 50)))) then v82[v84[1 + 1]]=v82[v84[1 + 2]][v84[4 + 0 + 0]];else v82[v84[(1091 -(994 + 91)) -4]]=v84[3 + 0];end elseif ((v85<=(6 + (29 -15))) or (1186==((3437 -1777) + 1050))) then local v117=(1443 -969) -(214 + 260);local v118;local v119;while true do if (((3484 -(275 + 657))<=(2718 + 112)) and (v117==(1240 -(107 + 44 + 1089)))) then v118=0;v119=nil;v117=1 -0;end if ((v117==(1 -0)) or ((4551 -3236)==(17399 -13702))) then while true do if ((v118==(0 -0)) or ((1122 + 2800)==(2530 -(343 + 213)))) then v119=v84[7 -5];v82[v119]=v82[v119]();break;end end break;end end elseif (((1226 -(610 + 403))<=(977 + 2084)) and (v85>(536 -(229 + 286)))) then do return;end else local v176=0 + 0;local v177;local v178;local v179;while true do if ((((860 -(585 + 274)) + 0)==v176) or ((3540 -(72 + 1777))<=((747 + 388) -573))) then v179=nil;while true do if ((1519<(868 + 854)) and (v177==(1 + 0))) then for v263=1, #v81 do local v264=1239 -(247 + 992);local v265;while true do if ((828>=(245 -166)) and (v264==0)) then v265=v81[v263];for v299=0, #v265 do local v300=1609 -(587 + 1022);local v301;local v302;local v303;local v304;while true do if ((((1513 -849) + 97)==(371 + 390)) and ((1958 -(4 + 1953))==v300)) then v303=nil;v304=nil;v300=5 -3;end if ((v300==(747 -(87 + 660))) or ((119 -71)==(326 + 888))) then v301=0 -0;v302=nil;v300=1940 -(1061 + 878);end if ((v300==(65 -(26 + (63 -26)))) or (2860<=(1384 -(166 + 112)))) then while true do if ((((6388 -(51 + 419)) -((662 -395) + (1026 -(75 + 106))))>(362 + 3381)) and (v301==(889 -(159 + 729)))) then v304=v302[1 + 1];if (((3711 -(239 + 353))<(8092 -4948)) and (v303==v82) and (v304>=v178)) then local v338=317 -(45 + 272);while true do if (((7315 -5093)==(3050 -(336 + 492))) and (v338==((0 -0) + 0))) then v179[v304]=v303[v304];v302[(2626 -(789 + 569)) -(1139 + 128)]=v179;break;end end end break;end if ((((11944 -7111) -(825 + 1107))>679) and (v301==(0 + 0))) then local v332=0;while true do if (((1968 -(287 + 71))<(5922 -(1307 + (588 -324)))) and (v332==1)) then v301=1 + 0;break;end if ((v332==0) or ((1129 + 3353)<=4151)) then v302=v265[v299];v303=v302[(1 -0) -0];v332=1 + (0 -0);end end end end break;end end end break;end end end break;end if ((v177==0) or ((9 + 9)>(5692 -(401 + 641)))) then local v252=(0 -0) -0;while true do if (((305 + 652)<=3493) and (v252==((0 + 0) -0))) then v178=v84[7 -(218 -(86 + 127))];v179={};v252=316 -(287 + 28);end if (((6092 -2014)>=(678 + 2223)) and (v252==(1996 -(5 + 1990)))) then v177=(1569 + 289) -(1558 + 299);break;end end end end break;end if ((v176==(1263 -(1168 + 95))) or (1168>=3206)) then v177=(0 + 0) -0;v178=nil;v176=2 -1;end end end elseif ((v85<=(28 + 6)) or ((10362 -7154)<561)) then if (((6328 -((3219 -1786) + 313))>=(478 + 496)) and (v85<=28)) then if ((v85<=25) or ((728 + 120)==(10374 -5864))) then if ((v85<=(17 + (876 -(768 + 102)))) or ((1586 -(474 + 846))>(967 + 2429 + 905))) then local v120=1838 -(275 + 1563);local v121;local v122;local v123;local v124;while true do if (((1081 -335)>=(261 + 16)) and ((841 -(139 + 17 + 683))==v120)) then for v225=v121,v70 do local v226=(1032 -(354 + 678)) + 0;local v227;local v228;while true do if ((v226==0) or ((3538 -(68 + 185))==(4535 -(37 + 50)))) then v227=1576 -(781 + 795);v228=nil;v226=(4 -3) + 0;end if ((v226==(1 + 0)) or (1531>=2876)) then while true do if (((93 + 1087)<=2855) and (v227==(0 + (767 -(758 + 9))))) then v228=0 + 0;while true do if (((2994 -((957 -(241 + 703)) + 446))>=(2237 -(789 + (1070 -(9 + 820))))) and (v228==(0 -0))) then v124=v124 + (2 -1);v82[v225]=v122[v124];break;end end break;end end break;end end end break;end if ((v120==0) or ((1193 + 1486)>=(10287 -6804))) then v121=v84[612 -(273 + 337)];v122,v123=v79(v82[v121](v82[v121 + 1]));v120=1 -0;end if (((6186 -(904 + 322))>(3957 + 191)) and (v120==(1313 -(113 + 1199)))) then local v224=0 -0;while true do if ((v224==0) or ((686 -479)==(1690 + 2231))) then v70=(v123 + v121) -(1 -0);v124=0 -0;v224=1 + 0 + 0;end if ((v224==(1399 -(1164 + 234))) or (((7838 -3744) -(932 + 705))>=(5900 -3092))) then v120=2;break;end end end end elseif (((2373 -(832 + 202))<=3019) and (v85==24)) then local v180=0;local v181;local v182;local v183;while true do if (((1873 + 2330)>=(2418 -(7 + 5))) and (0==v180)) then v181=v84[1642 -(800 + 840)];v182=v82[v181];v180=4 -3;end if ((v180==(1 + (58 -(41 + 17)))) or ((4498 -1784)==3779)) then v183=v82[v181 + (814 -(19 + 793)) + 0];if (((4180 -((3499 -2167) + 331))<(1619 + 1667)) and (v183>(475 -(24 + 451)))) then if (((3050 + 162 + 411)<((29634 -17359) -7709)) and (v182>v82[v181 + 1])) then v69=v84[1473 -(462 + 1008)];else v82[v181 + (1226 -(1013 + 210))]=v182;end elseif (((4316 -(235 + 190))>=(1149 -(749 + 182))) and (v182<v82[v181 + (3 -2)])) then v69=v84[3];else v82[v181 + (879 -(512 + 364))]=v182;end break;end end else local v184=0 -0;local v185;local v186;while true do if ((v184==(0 -0)) or (4284<=(1041 + 240))) then local v229=0;while true do if (((16530 -12034)>=(558 + (5264 -(813 + 929)))) and (v229==((1924 -1052) -(52 + 820)))) then v185=80 -(54 + (111 -85));v186=nil;v229=(882 -(133 + 191)) -(466 + 91);end if ((v229==(1093 -(925 + 167))) or (((40 + 2163) -1204)>((4030 + 1531) -(208 + 947)))) then v184=1 + 0;break;end end end if ((v184==(1 + 0)) or (4546<((1762 -1058) + 2438))) then while true do if ((v185==(0 + 0)) or (((231 + 4228) -(20 + 12))==(2112 -(246 + (2550 -1435))))) then v186=v84[4 -2];v82[v186](v12(v82,v186 + (1 -0),v70));break;end end break;end end end elseif (((1362 -(649 + 663))<(9212 -6003)) and (v85<=26)) then local v125=0 -0;local v126;local v127;local v128;local v129;local v130;while true do if ((v125==(873 -(816 + 56))) or (((7056 -(1175 + 530)) -(181 + 1557))<=(1718 -(581 + 437)))) then v128=nil;v129=nil;v125=2 + 0;end if ((v125==(944 -(808 + (619 -(433 + 50))))) or ((6825 -4405)<(1949 -(748 + 134)))) then v126=0 + 0;v127=nil;v125=(1 + 0) -0;end if ((v125==(1 + 1)) or ((3664 -(1201 + 369))>(5572 -(1019 + 278)))) then v130=nil;while true do if (((2762 + 2186)>293) and (0==v126)) then local v235=1299 -(261 + 311 + 727);while true do if (((13490 -(18274 -9756))>(3942 -(20 + 8 + 1))) and (v235==(718 -((352 -205) + 570)))) then v126=1607 -(124 + 1482);break;end if ((v235==(0 + 0)) or ((1068 + 1990)>=(3166 + 1139 + 299))) then v127=0 + 0;v128=nil;v235=4 -(3 + 0);end end end if (((1035 + 435 + 854)>=365) and (v126==2)) then while true do if (((1506 -(160 + 576))<(7738 -3465)) and (v127==(1302 -(406 + 896)))) then local v268=0 -0;while true do if ((v268==1) or (2988==(4899 -(569 + (2139 -1440))))) then v127=1 + 0 + 0;break;end if (((0 -0)==v268) or (1645>(1007 + 2921))) then local v293=0 -0;while true do if ((4560==(4392 + 168)) and (1==v293)) then v268=4 -3;break;end if (((126 + 445)<=(14895 -10959)) and (v293==(0 + 0))) then v128=v84[55 -((2001 -(1842 + 120)) + 14)];v129=v82[v128];v293=(315 + 510) -(62 + 762);end end end end end if ((3097==(728 + 2369)) and (v127==(1 -0))) then v130=v84[4 -1];for v281=1,v130 do v129[v281]=v82[v128 + v281];end break;end end break;end if ((v126==(1 + 0)) or ((4746 -(818 + 853))<((3951 -2445) -1104))) then v129=nil;v130=nil;v126=1813 -(1259 + 552);end end break;end end elseif (((3601 -(91 + 9))>(1872 -962)) and (v85==27)) then v82[v84[4 -2]]=v84[3 + (0 -0)]~=(1887 -(1397 + 490));else local v188=0 + 0;local v189;local v190;while true do if ((((997 + 3446) -(4735 -3556))>264) and (v188==(2 -1))) then while true do if (((18 + 886)==(119 + 785)) and ((302 -(233 + 69))==v189)) then v190=v84[2];do return v12(v82,v190,v70);end break;end end break;end if ((v188==((0 + 0) -0)) or ((557 + 301)==(5407 -(193 + (3595 -(1322 + 564)))))) then v189=0;v190=nil;v188=1;end end end elseif (((13434 -9605)>(735 -(146 + 191))) and (v85<=(26 + 5))) then if ((4960>=(1370 + 229)) and (v85<=29)) then local v131=0 -0;local v132;local v133;local v134;while true do if ((v131==1) or ((2916 + 146)<=(2040 -(387 + 57)))) then v134=nil;while true do if ((v132==(2 -1)) or ((2723 -(35 + 91))>=(8495 -4369))) then for v246=v133 + 1 + 0,v70 do v7(v134,v82[v246]);end break;end if (((3922 -(758 + 404))>(634 -387)) and (v132==(1079 -(563 + 516)))) then v133=v84[725 -(664 + 59)];v134=v82[v133];v132=1 + 0;end end break;end if ((v131==((645 -(121 + 367)) -(70 + 87))) or ((9707 -6442)==(3977 + 746))) then v132=0;v133=nil;v131=1 + 0 + 0;end end elseif ((v85>30) or ((3040 -(1775 + 125))<(19 + 500))) then local v191=0 + 0;local v192;local v193;while true do if (((4622 -(364 + 724))<=(4788 -(56 + 20 + 75))) and ((1669 -(742 + 926))==v191)) then while true do if (((422 + 2954)>(2544 -(376 + 890))) and (v192==0)) then v193=v82[v84[3 + 1]];if ( not v193 or (2664<=(5 + 0))) then InstrPoint=InstrPoint + ((8 -4) -3);else local v283=942 -(97 + 845);while true do if (((6056 -(3698 + 798))<=(1049 + 1063)) and (v283==((771 -(594 + 177)) + 0))) then v82[v84[2]]=v193;InstrPoint=v84[2 + 1];break;end end end break;end end break;end if (((5375 -(3494 -2481))==(4169 + 193)) and ((0 -0)==v191)) then v192=(1775 -(560 + 1215)) + 0;v193=nil;v191=1 + 0;end end else v69=v84[9 -6];end elseif ((v85<=(1 + 31)) or ((1792 + 2753)<(4630 -(121 + 62)))) then local v135=0 -0;local v136;local v137;local v138;local v139;local v140;while true do if ((v135==(2 + 0)) or ((3955 -(4020 -(924 + 758)))==(1114 + (2687 -(1032 + 28))))) then v140=nil;while true do if ((((473 + 2184) -((1537 -(164 + 1301)) + 1371))<(6772 -4068)) and (v136==(2 -1))) then v139=nil;v140=nil;v136=4 -2;end if ((3001<((4058 -(26 + 710)) + 2)) and (v136==(1105 -(329 + 776)))) then v137=0 -0;v138=nil;v136=1 -0;end if ((v136==(3 -1)) or ((4630 -(953 + 405))<(442 + (1529 -(118 + 1152))))) then while true do if (((2 + 0 + 0)==v137) or (((2929 -(553 + 266)) -(769 + 51))>=(1178 + 1091))) then for v284=2 -(1171 -(1169 + 1)),v84[5 -1] do local v285=140 -(65 + 75);local v286;local v287;local v288;while true do if ((v285==(0 + 0)) or ((1568 -966)>=(2242 + 20))) then v286=0 + 0;v287=nil;v285=1 + 0;end if (((1771 -(1072 + (344 -217)))>=(837 -485)) and (v285==(1 + 0))) then v288=nil;while true do if ((4450>=(188 -(36 + 1))) and (v286==((77 + 401) -(420 + 58)))) then local v313=0 + 0;while true do if ((4754>=(2099 -(190 + 2 + 1471))) and (v313==(1 + 0))) then v286=1;break;end if (((13082 -9514)>=199) and ((0 -0)==v313)) then v287=0 + 0;v288=nil;v313=1790 -(802 + 987);end end end if (((4005 -3054)==951) and (v286==1)) then while true do if (((9206 -4791)>=((7786 -(1555 + 381)) -1944)) and (v287==(2 -1))) then if ((v288[1901 -(151 + 1749)]==(1 -0)) or ((444 + (1553 -1043))==(1173 -845))) then v140[v284-(2 -1)]={v82,v288[4 -(1 -0)]};else v140[v284-(509 -(191 + 317))]={v36,v288[1324 -((2303 -1161) + 179)]};end v81[ #v81 + 1 + 0]=v140;break;end if (((14367 -9569)>=(4445 -(76 + 195))) and (v287==((0 -0) -0))) then local v334=434 -(389 + 45);while true do if ((v334==(2 -1)) or (803>=(5033 -(298 + 24 + (437 -187))))) then v287=1 -0;break;end if ((v334==(190 -(75 + 115))) or ((3599 -(673 + 37))==(86 + 74))) then v69=v69 + 1 + 0;v288=v75[v69];v334=1 -0;end end end end break;end end break;end end end v82[v84[(3653 -2896) -(431 + 4 + 320)]]=v29(v138,v139,v37);break;end if (((292 + 3160)>345) and (v137==(0 + 0))) then local v270=0 + 0;while true do if (((5604 -(422 + 313))>(857 -(160 + 4))) and (v270==(0 + 0))) then local v294=0;while true do if ((v294==(0 + 0)) or (834<(30 + 129))) then v138=v77[v84[(1337 -(78 + 1014)) -(164 + 78)]];v139=nil;v294=1;end if (((3659 -(511 + 1272))>(3888 -2461)) and (v294==(1 + 0))) then v270=1 + (0 -0);break;end end end if (((1192 -(225 + 535))<=2931) and (v270==(1 + 0))) then v137=(746 + 214) -(869 + (1939 -(1773 + 76)));break;end end end if ((260<(13829 -9102)) and (((2502 -(1022 + 918)) -(109 + 452))==v137)) then local v271=0 -0;while true do if ((v271==(457 -(42 + 414))) or ((6383 -(999 + 992))<(5088 -1638))) then v137=5 -3;break;end if (((1014 + 3171)>=69) and (v271==(0 + 0))) then local v295=176 -(14 + 162);while true do if ((v295==0) or ((5401 -(769 + 10))<=(3211 -(151 + 1785)))) then v140={};v139=v9({},{__index=function(v314,v315)local v319=1354 -(521 + 833);local v320;local v321;while true do if ((v319==(0 -0)) or ((9480 -7080)<=(101 -25))) then v320=0 + 0;v321=nil;v319=3 -2;end if ((v319==1) or ((151 + 428)>(4411 -(1486 + 25 + 246)))) then while true do if ((533<((3768 -(429 + 529)) -1956)) and (v320==(0 + 0))) then v321=v140[v315];return v321[1 -(0 + 0)][v321[1932 -(1219 + 711)]];end end break;end end end,__newindex=function(v316,v317,v318)local v322=0;local v323;while true do if ((v322==(0 -0)) or (1158==(11487 -8156))) then v323=v140[v317];v323[1 -0][v323[5 -3]]=v318;break;end end end});v295=1 + 0;end if ((3668>=((234 + 2107) -(174 + 1304))) and (v295==(961 -(923 + 37)))) then v271=228 -(220 + 7);break;end end end end end end break;end end break;end if ((v135==(0 -0)) or ((1921 -(28 + 114))>3306)) then v136=938 -(87 + 851);v137=nil;v135=2 -1;end if ((1==v135) or ((17262 -12628)==(1486 -(62 + 683)))) then v138=nil;v139=nil;v135=1489 -(712 + 775);end end elseif ((v85==(25 + 8)) or ((13274 -9133)<(1 + 10 + (4216 -(423 + 40))))) then local v194=0 + 0;local v195;local v196;while true do if ((v194==(1 + (160 -(81 + 79)))) or ((11520 -7786)>=(5334 -(446 + 182)))) then while true do if ((v195==0) or ((1578 + 469)<=335)) then v196=v84[2];v82[v196](v82[v196 + (264 -(227 + 36))]);break;end end break;end if ((1851==(3131 -1280)) and ((0 -0)==v194)) then v195=0 -0;v196=nil;v194=(8 -5) -2;end end else v82[v84[4 -2]]=v37[v84[3 -0]];end elseif (((2747 -1029)>1699) and (v85<=(73 -33))) then if (((14746 -10836)>1713) and (v85<=(10 + 27))) then if (((7067 -3446)>=(210 + 63)) and (v85<=35)) then if (v82[v84[3 -1]] or ((2478 + 15)<(2355 -(508 + 994)))) then v69=v69 + (163 -(58 + 104));else v69=v84[2 + (2 -1)];end elseif (((1599 + 2566)>2311) and (v85>(25 + 11))) then local v198=0 + (215 -(29 + 186));local v199;local v200;while true do if (((1185 -(13 + 437))<=(10754 -6169)) and (v198==1)) then while true do if ((v199==((0 + 0) -0)) or ((967 + 989)==(3001 -(61 + 29)))) then v200=v84[883 -(6 + 68 + 807)];v82[v200]=v82[v200](v12(v82,v200 + (1302 -(742 + (1738 -(839 + 340)))),v84[(1209 -358) -(179 + 669)]));break;end end break;end if ((994<(9987 -6950)) and (v198==(0 + 0))) then v199=0;v200=nil;v198=(1527 -(722 + 804)) + (344 -(279 + 65));end end else v82[v84[2 + (1775 -(1758 + 17))]]=v84[3] + v82[v84[(793 -(413 + 173)) -(151 + 52)]];end elseif (((935 -((453 -(261 + 166)) + 3))<=2048) and (v85<=(1919 -(312 + 1569)))) then local v141=0;local v142;local v143;local v144;local v145;while true do if ((v141==(1 -0)) or ((1028 -709)>(10131 -6713))) then v144=nil;v145=nil;v141=1386 -((145 -72) + 1311);end if (((7430 -3559)>(10861 -8137)) and (v141==0)) then v142=0 + 0;v143=nil;v141=1 + 0;end if (((1288 + 2129)>=(3543 -((4180 -3316) + 1062))) and (v141==(2 + 0))) then while true do if ((v142==((1216 -664) -(454 + 98))) or (3915<(12369 -9042))) then local v236=(1167 -(255 + 912)) + 0;while true do if ((4896>(816 + 944)) and (v236==(771 -(732 + 38)))) then v142=1;break;end if (((1640 + 2196)>=602) and (v236==0)) then v143=0 -0;v144=nil;v236=1252 -((354 -159) + 665 + 391);end end end if (((154 + 253 + 445)<(833 + 59)) and (v142==1)) then v145=nil;while true do if (((3271 + 318)<(4622 -(353 + 292))) and (v143==0)) then local v272=0;while true do if ((v272==(1249 -(77 + 1171))) or ((6044 -(186 + 1269))<((7175 -(330 + 315)) -2949))) then v143=3 -2;break;end if ((v272==(0 + 0)) or (2168<=(5 + 322))) then local v296=0;while true do if ((v296==(1 + 0)) or (2633==((12640 -8415) -2106))) then v272=2 -1;break;end if (((1236 + 1)>((1417 + 1285) -1696)) and (0==v296)) then v144=v84[2];v145=v82[v144];v296=1;end end end end end if (((2 -(702 -(321 + 380)))==v143) or ((7684 -5356)==1030)) then for v289=v144 + (1 -0),v84[(17 -7) -(1 + 6)] do v7(v145,v82[v289]);end break;end end break;end end break;end end elseif ((v85>(30 + 9)) or (1643>=3050)) then local v202=0 -0;local v203;local v204;local v205;while true do if ((v202==(0 -0)) or ((2735 + 1221 + 114)>4978)) then v203=0 + 0;v204=nil;v202=2 -1;end if ((((3990 + 13010) -12112)>(1884 + 2144)) and (v202==(517 -(447 + 69)))) then v205=nil;while true do if (((1467 + (3803 -1197))>=2822) and (v203==(292 -(65 + 226)))) then while true do if (((2190 -(846 + 1008))<=(2497 -1063)) and (v204==(0 -0))) then v205=v84[2 -0];v82[v205](v12(v82,v205 + 1 + 0 + 0,v84[1979 -((2902 -(896 + 249)) + 219)]));break;end end break;end if ((v203==(1431 -(1314 + 117))) or ((11479 -7351)<=(3171 + 804))) then v204=0 + 0;v205=nil;v203=3 -2;end end break;end end else v82[v84[516 -(420 + 94)]]=v82[v84[3]]%v82[v84[1 + 0 + 1 + 2]];end elseif (((6170 -(1672 + 33))>2073) and (v85<=(27 + (40 -24)))) then if ((v85<=((28 + 28) -15)) or ((2594 + 104)>(3944 + 484))) then v82[v84[2]]=v82[v84[3]]%v84[1827 -(431 + 1392)];elseif ((v85>42) or ((815 + 548)<=((1129 -(712 + 311)) + 153))) then local v207=433 -(45 + 388);local v208;while true do if ((v207==(0 -0)) or (2920>=3419)) then v208=v82[v84[14 -10]];if (v208 or ((2510 -(1770 + 178))>((5325 -3700) + 437))) then InstrPoint=InstrPoint + (2 -1);else local v247=32 -(13 + 19);local v248;while true do if ((((553 -(348 + 203)) + 211)<(2799 -((720 -(247 + 134)) + 80))) and (v247==0)) then v248=0 -0;while true do if ((v248==(0 -0)) or (((5254 -(531 + 184)) -(187 + 705))<2730)) then v82[v84[8 -6]]=v208;InstrPoint=v84[10 -7];break;end end break;end end end break;end end else local v209=0 -0;local v210;local v211;local v212;while true do if (((1615 + 906)<=3723) and (v209==(684 -(12 + 670)))) then if ((((1138 -734) + 3169)<=(6808 -2143)) and (v211>(0 -0))) then if ((v212<=v82[v210 + 1 + 0]) or ((5320 -(311 + 578))<=(1137 -(229 + 614)))) then local v273=0;while true do if (((3798 -(345 + 655))>(409 + 890)) and (v273==(0 -0))) then v69=v84[3];v82[v210 + (787 -(693 + 91))]=v212;break;end end end elseif (((2845 -(152 + 944))<(1898 + 2380)) and (v212>=v82[v210 + 1])) then local v274=0;local v275;while true do if (((5407 -(963 + 345))>=1345) and (((0 -0) -0)==v274)) then v275=1094 -(880 + 214);while true do if (((4814 -(690 + 1161))>=(310 + 951)) and (0==v275)) then v69=v84[14 -11];v82[v210 + 2 + 1]=v212;break;end end break;end end end break;end if ((v209==1) or ((367 + 4211)<(2020 + 60))) then v212=v82[v210] + v211;v82[v210]=v212;v209=215 -((305 -158) + 66);end if ((2806>((814 -417) + 1228)) and (v209==(0 -0))) then local v231=0;while true do if ((3479==(10060 -6581)) and (v231==(1497 -(459 + 1038)))) then v210=v84[2 + 0 + 0];v211=v82[v210 + (6 -4)];v231=1;end if ((v231==((3045 -(312 + 874)) -(1020 + 838))) or ((296 + 172)==(6150 -3592))) then v209=1 + 0;break;end end end end end elseif ((v85<=(625 -(234 + 347))) or (4763<=1263)) then local v147=885 -((1347 -(733 + 385)) + 389 + 267);local v148;local v149;local v150;while true do if (((11783 -8764)<=(5063 -(238 + 986))) and (v147==1)) then v150=nil;while true do if (((1402 -810)==592) and (v148==(0 + 0))) then v149=0 + 0;v150=nil;v148=1;end if ((v148==(1 + 0)) or ((3427 -(1494 + 380))<=351)) then while true do if ((v149==0) or ((4082 -(1237 + 224))<(728 + 174))) then v150=v84[(141 -(38 + 102)) + 1];v82[v150]=v82[v150](v12(v82,v150 + (2 -1),v70));break;end end break;end end break;end if ((v147==(625 -(583 + 42))) or (1857<=(2397 -(299 + 1680)))) then v148=826 -(715 + (930 -(780 + 39)));v149=nil;v147=4 -3;end end elseif ((v85>(65 -20)) or (4899<(102 + 156))) then v82[v84[2]]=v29(v77[v84[5 -2]],nil,v37);else local v214=0 -0;local v215;local v216;local v217;local v218;while true do if ((v214==(0 -0)) or ((2347 -920)<=(97 + 353))) then v215=v84[2];v216,v217=v79(v82[v215](v12(v82,v215 + 1,v84[6 -(2 + 1)])));v214=(1 -0) + 0;end if (((990 -(289 + 700))==v214) or ((2808 -(811 + 1084))>(3972 + 260))) then local v232=0 -0;while true do if ((2452==((3665 -(338 + 83)) -(642 + 150))) and (v232==(1924 -(1494 + 429)))) then v214=299 -(111 + 186);break;end if ((v232==(894 -(75 + 819))) or ((648 + 4)==(2135 + 2013))) then v70=(v217 + v215) -(2 -1);v218=(1664 -(989 + 98)) -(440 + 137);v232=2 -1;end end end if (((3145 -(456 + 667))==(1427 + 595)) and (v214==(2 + 0))) then for v237=v215,v70 do local v238=0 + 0 + 0;local v239;while true do if (((901 + 974 + 972)==(2901 -(16 + 38))) and ((0 + 0)==v238)) then v239=0 -0;while true do if (((1632 + 2037)==3669) and (v239==((1200 -(1021 + 179)) -0))) then v218=v218 + (1302 -(528 + 773));v82[v237]=v216[v218];break;end end break;end end end break;end end end v69=v69 + (2 -1);break;end if ((v89==(0 + 0)) or ((4923 -(1004 + 96))>=(4958 -(266 + 135)))) then local v98=0;local v99;while true do if ((4324>2301) and (v98==(0 + 0))) then v99=0 -0;while true do if ((v99==(1 + 0)) or ((4055 -2323)>(5261 -(841 + 8)))) then v89=1501 -(1454 + 46);break;end if ((v99==(975 -(119 + 856))) or (2735==(503 -(160 + 26)))) then v84=v75[v69];v85=v84[1 + 0];v99=1;end end break;end end end end break;end end end end A,B=v27(v10(v73));if  not A[1] then local v86=v35[4][v69] or "?";error("Script error at ["   .. v86   .. "]:"   .. A[2]);else return v12(A,2,B);end end;end return v29(v28(),{},v16)();end if (3==v17) then v23=nil;function v23()local v59,v60,v61,v62=v1(v15,v18,v18 + (11 -8));v18=v18 + 4;return (v62 * (9267112 + 7510104)) + (v61 * (200869 -135333)) + (v60 * (543 -287)) + v59;end v24=nil;v17=4;end end end vv8());end
